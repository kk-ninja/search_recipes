[{"A:\\React\\react_demo\\src\\index.js":"1","A:\\React\\react_demo\\src\\App.js":"2","A:\\React\\react_demo\\src\\Navbar.js":"3","A:\\React\\react_demo\\src\\Home.js":"4","A:\\React\\react_demo\\src\\Footer.js":"5","A:\\React\\react_demo\\src\\OurMenu.js":"6","A:\\React\\react_demo\\src\\Recipe.js":"7","A:\\React\\react_demo\\src\\Recipe_card.js":"8","A:\\React\\react_demo\\src\\Menu.js":"9"},{"size":265,"mtime":1607256492707,"results":"10","hashOfConfig":"11"},{"size":873,"mtime":1607423318650,"results":"12","hashOfConfig":"11"},{"size":1486,"mtime":1607423125017,"results":"13","hashOfConfig":"11"},{"size":957,"mtime":1608466532566,"results":"14","hashOfConfig":"11"},{"size":237,"mtime":1607422343149,"results":"15","hashOfConfig":"11"},{"size":731,"mtime":1608108621888,"results":"16","hashOfConfig":"11"},{"size":3452,"mtime":1607861903539,"results":"17","hashOfConfig":"11"},{"size":4931,"mtime":1608384666791,"results":"18","hashOfConfig":"11"},{"size":1818,"mtime":1607804379100,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1jpatrk",{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"A:\\React\\react_demo\\src\\index.js",[],["42","43"],"A:\\React\\react_demo\\src\\App.js",["44","45","46"],"import react from \"react\";\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js'\r\nimport $ from 'jquery';\r\nimport Popper from 'popper.js';\r\nimport { Redirect, Route, Switch } from \"react-router-dom\"\r\n\r\nimport Navbar from \"./Navbar\";\r\nimport Home from \"./Home\";\r\nimport OurMenu from \"./OurMenu\";\r\nimport Recipe from \"./Recipe\";\r\n\r\nimport Footer from \"./Footer\";\r\n\r\nconst App = () =>{\r\n    return(  \r\n        <>\r\n        <Navbar />\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Home} /> \r\n                <Route exact path=\"/menu\" component={OurMenu} />\r\n                <Route exact path=\"/recipe\" component={Recipe} />\r\n                <Redirect to=\"/\" />\r\n            </Switch>\r\n\r\n        <Footer />\r\n                  \r\n        </>\r\n    )\r\n    \r\n}\r\n\r\nexport default App;     ","A:\\React\\react_demo\\src\\Navbar.js",[],"A:\\React\\react_demo\\src\\Home.js",["47"],"A:\\React\\react_demo\\src\\Footer.js",[],"A:\\React\\react_demo\\src\\OurMenu.js",[],"A:\\React\\react_demo\\src\\Recipe.js",["48","49"],"import { useEffect, useState } from \"react\";\r\nimport Recipecard from \"./Recipe_card\";\r\nimport \"./Recipe.css\";\r\n\r\nconst Recipe = () =>{\r\n\r\n    const app_id = \"ea976b4d\";\r\n    const app_key = \"4d560ba2678badfe64240e5c92464b85\";\r\n\r\n    const [search, setSearch] = useState(\"Paneer\");\r\n    const [Recipe, setRecipe] = useState([]);\r\n    const [count, setCount] = useState(20);\r\n\r\n    const getsearchQuery = e =>{\r\n        setSearch(e.target.value);\r\n        console.log(search);\r\n\r\n    }\r\n    useEffect( () => {\r\n        getData();\r\n    },[]);\r\n   \r\n    useEffect( () => {\r\n        getData();\r\n    },[count])\r\n\r\n    const getData = async() =>{\r\n        const result = await fetch(`https://api.edamam.com/search?q=${search}&app_id=${app_id}&app_key=${app_key}&to=${count}`);\r\n        const data = await result.json();\r\n        setRecipe(data.hits);\r\n        \r\n    }\r\n\r\n    const getMore = () => {\r\n        setCount(count+8);\r\n    }\r\n\r\n    console.log(Recipe);\r\n    return(\r\n        <>\r\n                <div className=\"container R_top\">\r\n                    <center>\r\n                    <h2 className=\"R_heading\">\r\n                        <span className=\"material-icons jambo_icon_r\">\r\n                            fastfood\r\n                        </span>&nbsp;Food Recipes\r\n                    </h2>\r\n                    <div className=\"custom-file\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8 mx-auto\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-10 col-sm-8 mt-3\">\r\n                                        <input className=\"form-control form-control-sm searchInputBox\" type=\"text\" placeholder=\"Search For Recipes...\" value={search} onChange={getsearchQuery}/>   \r\n                                    </div>\r\n                                    <div className=\"col-md-2 col-sm-4 mt-3\">\r\n                                        <button className=\"btnS\" onClick={getData}>Search</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    </center>\r\n                </div>\r\n            <section className = \"container\">\r\n                <center>\r\n                    <div className=\"row mt-5\">\r\n                        {Recipe.map((Rdata, index) =>(\r\n                            <Recipecard \r\n                                key = {index}\r\n                                listId = {index}\r\n                                image = {Rdata.recipe.image} \r\n                                title = {Rdata.recipe.label}\r\n                                rating = {Rdata.recipe.yield}\r\n                                energy = {Rdata.recipe.calories}\r\n                                diet = {Rdata.recipe.dietLabels}\r\n                                ingredients = {Rdata.recipe.ingredients}\r\n                                detail_url = {Rdata.recipe.url}\r\n                                \r\n                            />\r\n                        ))}\r\n                               \r\n                    </div>\r\n                </center>\r\n                <div align=\"right\">\r\n                    <button className=\"btnC\" onClick={getMore}>More</button>\r\n                </div>\r\n            </section>\r\n\r\n\r\n        </>\r\n    )\r\n} \r\n\r\nexport default Recipe;","A:\\React\\react_demo\\src\\Recipe_card.js",["50","51","52","53"],"\r\n\r\nconst Menucard = ({listId, image, title, rating, energy, diet, ingredients, detail_url}) =>\r\n{   \r\n    //var dietleval; \r\n    console.log(ingredients);\r\n    //if(diet != \"\"){\r\n    //dietleval = <div><strong>Diet Leval:</strong> {diet}</div>;\r\n    //}\r\n    var titletried;\r\n    var titleLength = title.length;\r\n    if(titleLength > 43)\r\n    {\r\n        titletried = title.slice(0, 40);\r\n        titletried = titletried+\"...\"\r\n    }\r\n    else{\r\n        titletried = title;\r\n    }\r\n\r\n    const energy_formated = energy.toFixed(2);\r\n\r\n    \r\n        return(\r\n                <>\r\n                 \r\n                    <div className=\"col-md-3 col-sm-6\">\r\n                    <span data-toggle=\"modal\" data-target={`#R_modal${listId}`}>\r\n                        <div className=\"R_card\">\r\n                            <div className=\"R_card_body\">\r\n                                    <div className=\"R_img_div\">\r\n                                        <img src={image} className=\"R_img\"></img>\r\n                                    </div>\r\n                                    <div className=\"R_title\">{titletried}</div>\r\n                                    <div className=\"R_servings\">{rating}</div>\r\n                                    <div className=\"R_energy\">{energy_formated} cal.</div>\r\n                            </div>\r\n                        </div>\r\n                        </span>\r\n                     </div>\r\n                    \r\n\r\n            \r\n                    <div className=\"modal fade\" id={`R_modal${listId}`} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"Recepie_Title\" aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog modal-lg modal-dialog-centered\" role=\"document\">\r\n                            <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title In_title\" id=\"exampleModalLongTitle\">{title}</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div align=\"left\" className=\"modal-body\">\r\n                           \r\n                            <p className=\"In_title\">Ingredients</p>\r\n                            <div className=\"row\">\r\n                                {\r\n                                    ingredients.map((R_ingredient, index) =>(\r\n                                        <>\r\n                                            \r\n                                                <div className=\"col-md-6\">\r\n                                                    <div className=\"In_card\">\r\n                                                        <div className=\"In_card_content\">\r\n                                                            <table>\r\n                                                                <tr>\r\n                                                                    <td width=\"18%\">\r\n                                                                        <img src={R_ingredient.image} className=\"In_img\"></img>\r\n                                                                    </td>\r\n                                                                    <td className=\"In_info_td\">\r\n                                                                    <small><span className=\"In_name\">{R_ingredient.text}</span><br/>\r\n                                                                        <div className=\"In_weight\">{R_ingredient.weight.toFixed(1)}g</div></small>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            </table>\r\n                                                        </div>\r\n                                                    </div>    \r\n                                                </div>\r\n                                        \r\n                                            \r\n                                            \r\n                                        </>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                            \r\n                           \r\n                            <div align=\"right\">\r\n                                <a target=\"_blank\" className=\"btnC\" href={detail_url}>More Info.</a> &nbsp;&nbsp;\r\n                                <a  className=\"btnC\" data-dismiss=\"modal\">Close</a>\r\n                            </div>\r\n                             </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n\r\n            )\r\n       \r\n}\r\n\r\nexport default Menucard;","A:\\React\\react_demo\\src\\Menu.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":8,"nodeType":"60","messageId":"61","endLine":1,"endColumn":13},{"ruleId":"58","severity":1,"message":"62","line":4,"column":8,"nodeType":"60","messageId":"61","endLine":4,"endColumn":9},{"ruleId":"58","severity":1,"message":"63","line":5,"column":8,"nodeType":"60","messageId":"61","endLine":5,"endColumn":14},{"ruleId":"64","severity":1,"message":"65","line":14,"column":21,"nodeType":"66","endLine":14,"endColumn":71},{"ruleId":"67","severity":1,"message":"68","line":21,"column":7,"nodeType":"69","endLine":21,"endColumn":9,"suggestions":"70"},{"ruleId":"67","severity":1,"message":"68","line":25,"column":7,"nodeType":"69","endLine":25,"endColumn":14,"suggestions":"71"},{"ruleId":"64","severity":1,"message":"65","line":32,"column":41,"nodeType":"66","endLine":32,"endColumn":76},{"ruleId":"64","severity":1,"message":"65","line":67,"column":73,"nodeType":"66","endLine":67,"endColumn":122},{"ruleId":"72","severity":1,"message":"73","line":88,"column":36,"nodeType":"74","endLine":88,"endColumn":51},{"ruleId":"75","severity":1,"message":"76","line":89,"column":33,"nodeType":"66","endLine":89,"endColumn":75},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'$' is defined but never used.","'Popper' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["79"],["80"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [getData]",{"range":"85","text":"86"},"Update the dependencies array to be: [count, getData]",{"range":"87","text":"88"},[535,537],"[getData]",[596,603],"[count, getData]"]